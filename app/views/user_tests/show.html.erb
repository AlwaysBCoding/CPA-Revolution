<script>
        // // There should really be a function that I run that figures out what should be the current question in everny situation. Then I can just call that function when applicable. I'm too tired to write it now though, so I think I'm going to put that off.
        // 
        // // Global Variables
        //  // count correct answers and wrong answers, decide which testlet is the current testlet based on that
        // var correctAnswers = <%= @correct_answers %>;
        // var wrongAnswers = <%= @wrong_answers %>;
        // <% if @activeQuestionOnLoad < @user_test.section.questions_per_testlet %>
        // var testlet = 1;
        // <% elsif @activeQuestionOnLoad < (@user_test.section.questions_per_testlet * 2) %>
        // var testlet = 2;
        // <% else %>
        // var testlet = 3;
        // <% end %>
        // 
        // // Set the currentQuestion on the pagination of activeQuestionOnLoad
        // $(function() {
        //  $("#page"+<%= @activeQuestionOnLoad %>+" a").addClass("currentQuestion");
        // });
        // 
        // // Takes an integer of seconds and returns a string of h:mm:ss
        // function seconds2time(seconds) {
        //     var hours   = Math.floor(seconds / 3600);
        //     var minutes = Math.floor((seconds - (hours * 3600)) / 60);
        //     var seconds = seconds - (hours * 3600) - (minutes * 60);
        //     var time = "";
        // 
        //     if (hours != 0) {
        //       time = hours+":";
        //     }
        //     if (minutes != 0 || time !== "") {
        //       minutes = (minutes < 10 && time !== "") ? "0"+minutes : String(minutes);
        //       time += minutes+":";
        //     }
        //     if (time === "") {
        //       time = seconds+"s";
        //     }
        //     else {
        //       time += (seconds < 10) ? "0"+seconds : String(seconds);
        //     }
        //     return time;
        // }
        // 
        // // logs the time_remaining through a get request to /user_test/?time_remaining=
        // function dbTimeRemaining() {
        //  var time = $("#timer .timer").text();
        //  var hours = parseInt(time.match(/\d:/)[0].replace(":", ""));
        //  var minutes = parseInt(time.match(/:\d+:/)[0].replace(":", "").replace(":", ""));
        //  var seconds = parseInt(time.match(/\d+$/)[0]);
        //  var time_remaining = (hours * 3600) + (minutes * 60) + (seconds);
        //  $.get(window.location.href + "?time_remaining=" + time_remaining);
        // }
        // 
        // // db the time remaining every 5 minutes and on the unload event 
        // setInterval(dbTimeRemaining, 300000);
        // window.onbeforeunload = dbTimeRemaining;
        // 
        // // Set the Modal handlers
        // $(function() {
        //  // Modal the test greeting
        //  $("#beginTest").modal();
        //  
//  // Go to the next testlet after hiding the endTestlet modal 
//  $("#endTestlet").on("hide", function() {
//    $("#pagination"+testlet).hide();
//    $("#pagination"+(testlet+1)).show();
//    testlet++;
//    
//    // Prepare the next question    
//    var questionNumber = (testlet-1) * <%= @testlet1.length %> + 1
//    getQuestionJSON(questionNumber);
//    
//  }); // on
//  
        //  // Set the countdown timer
        //  $("#beginTest").on("hide", function() {
        //    var sec = <%= @user_test.time_remaining %>;
        //    var timer = setInterval(function() {
        //      $("#timer .timer").text(seconds2time(--sec));
        //      if(sec == 0) {
        //        clearInterval(timer);
        //      }
        //    }, 1000); // setInterval
        //  }); // on
        // }); // load
        // 
        // // gets the JSON data for the questionNumber and modifies the DOM accordingly
        // function getQuestionJSON(questionNumber){
        //  $("#pagination a").removeClass("currentQuestion");
        //  $("#page"+questionNumber+" a").addClass("currentQuestion");
        //  $("#answers form").attr("action", "/user_test/" + questionNumber);
        //  $.getJSON(window.location.href + $("#page"+questionNumber+" a").attr("href"), 
        //        function(data){
        //            $(".choices").html("");
        //          $("#questionText").html(data.question.question_text);
        //          $(".questionSource").text(data.question.source);
        //        $(".topicName").text(data.topic.name);
        //        $(".questionNumber").text(questionNumber);
        //                
        //        $.each(data.answers, function(index,item){
        //          var value = item.correct? "correct" : "wrong";
        //            htmlString = "<li><input type='radio' id='choice"+(index+1)+"' name='answer' value='" + value + "' /><a><label for='choice"+(index+1)+"'>"+item.answer_text+"</label></a></li>";
        //          $(".choices").append(htmlString);
        //        }); // each
        //  }); // getJSON
        // }
        // 
// // AJAX Change Question on Pagination Click
// $(function() {
//  $(".page a").click(function() {
//    if($(this).hasClass('answered') == false) {
//  var questionNumber = $(this).attr("href").replace(/.*=/, "");
//  getQuestionJSON(questionNumber);
//    } // if
//  }); // click
// }); // load
// 
// // AJAX Handle Submit
// $(function() {
//  $("#answers .submit").on("click", function(e) {
//    e.preventDefault();
//    var questionNumber = parseInt($(".questionNumber").text());
//    
//    if($('input:radio[name=answer]:checked').length > 0) {
//    
//    // See if the answer was correct, add javascript points accordingly
//    if ($("#page"+questionNumber+" a").hasClass('answered') == false) {
//      var answer = $('input:radio[name=answer]:checked').val();
//      answer == "correct" ? correctAnswers++ : wrongAnswers++;
//      $(".correctAnswers").text(correctAnswers); $(".wrongAnswers").text(wrongAnswers); 
//    
//    // Submit the question
//      $.post(window.location+"/"+questionNumber, {"answer": answer}); 
//    } // if the question hasn't already been answered
//        
//      // Go to the next unanswered question
//      if ($(".answered").length + 1 < <%= @testlet1.length %>) {
//        var nextQuestion;
//        var curInterval = 1 + ((testlet - 1) * <%= @user_test.section.questions_per_testlet %>);
//        
//          for (i=0; i<<%= @user_test.section.questions_per_testlet %>; i++) {
//            if (questionNumber+1+i <= testlet * <%= @user_test.section.questions_per_testlet %>) {
//              if($("#page"+(questionNumber+1+i)+" a").hasClass("answered")) {
//                continue;
//              } else {
//                nextQuestion = (questionNumber+1+i);
//                break;
//              } // if the question is unanswered
//            } // if the question < 30
//            else {
//              if($("#page"+curInterval+" a").hasClass("answered")) {
//                curInterval++;
//                continue;
//              } else {
//                nextQuestion = (curInterval);
//                break;
//              }
//            } // else
// 
//          } // for 
//      
//      getQuestionJSON(nextQuestion);
//      
//      // Color the just answered question appropriately
//      $("#page"+questionNumber+" a").addClass("answered");
//      answer == "correct" ? $("#page"+questionNumber+" a").addClass("answeredCorrect") : $("#page"+questionNumber+" a").addClass("answeredWrong");
//      
//      } // if it's not the last question
//      
//      else {
//        $("#page"+questionNumber+" a").addClass("answered");
//        $(".correctAnswersModal span").text($(".correctAnswers").text());
//        $(".wrongAnswersModal span").text($(".wrongAnswers").text());
//        $(".answered").removeClass("answered");
//        
//        if (testlet < 3) {
//        $("#endTestlet .testletNumber").text(testlet);
//        $("#endTestlet .testletNumberPlusOne").text(testlet+1);
//        $("#endTestlet").modal();
//        } else {
//          window.location = "/user_test/finish";
//        } // if the test is over
//        
//      } // if it is the last question
//      
//    } // if an answer is selected
//    
//  }); // click
//  
// }); // load

</script>

<%= render 'test_greetings' %>

<div id="contentArea">
	
	<section id="questionContent">
		
		<%= render 'question_box' %>
		
		<%= render 'right_sidebar' %>
			
	</section> <!-- questionContent -->
	
<%= render 'pagination' %>		
	
</div>	<!-- contentArea -->