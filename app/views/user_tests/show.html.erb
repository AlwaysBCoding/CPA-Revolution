<style>

/* DIV Layout
===================== */
.container {
	width: 1200px;
}

#contentArea {
	width: 1200px;
	margin: 0 auto;
	position: relative;
}

#questionBox {
	height: 500px;
	width: 800px;
	float: left;
	box-sizing: border-box;
}

#rightSidebar {
	width: 320px;
	float: right;
}

/* PAGINATION
===================== */
#pagination2, #pagination3 {
	display: none;
}

.pagination a {
	padding: 0px 10px;
}

.pagination a.single_digit {
	padding: 0px 12px;
}

a.answered {
	background-color: #444;
}

a.answered:hover {
	background-color: #444;
}

.currentQuestion {
	font-weight: bold;
	background: #fefcea; /* Old browsers */
	background: -moz-linear-gradient(top, #fefcea 22%, #f1da36 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(22%,#fefcea), color-stop(100%,#f1da36)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top, #fefcea 22%,#f1da36 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top, #fefcea 22%,#f1da36 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top, #fefcea 22%,#f1da36 100%); /* IE10+ */
	background: linear-gradient(to bottom, #fefcea 22%,#f1da36 100%); /* W3C */
}

/*x PAGINATION x*/

/* Question Formatting 
===================== */

.clearfix {
	clear: both;
}

#questionBox p, #questionBox li {
	font-size: 16px;
	padding: 3px;
}

#questionBox li {
	margin-left: 10px;
}

ol.choices {
	list-style-type: upper-alpha;
}

.choices a:hover {
	text-decoration: none;
}

label {
	display: inline;
	cursor: pointer;
}

#questionText p {
	padding: 10px;
}

#answers a {
	padding-left: 6px;
	cursor: pointer;
}

.questionSource, .subTopicName {
	padding-left: 50px;
}

#runningScore {
	width: 75%;
}

#runningScore th {
	font-size: 20px;
}

#runningScore td {
	text-align: center;
	font-weight: bold;
	font-size: 18px;
	padding-top: 15px;
	padding-bottom: 15px;
}

.correctAnswers {
	color: green;
}

.wrongAnswers {
	color: red;
}

.submit {
	margin-left: 12px;
}

#timer {
	width: 60%;
	margin: 0 auto;
}

.timer {
	font-size: 30px;
}

</style>

<script>
// Global Variables
var correctAnswers = <%= @correct_answers %>;
var wrongAnswers = <%= @wrong_answers %>;
var testlet = 1;

function seconds2time(seconds) {
    var hours   = Math.floor(seconds / 3600);
    var minutes = Math.floor((seconds - (hours * 3600)) / 60);
    var seconds = seconds - (hours * 3600) - (minutes * 60);
    var time = "";

    if (hours != 0) {
      time = hours+":";
    }
    if (minutes != 0 || time !== "") {
      minutes = (minutes < 10 && time !== "") ? "0"+minutes : String(minutes);
      time += minutes+":";
    }
    if (time === "") {
      time = seconds+"s";
    }
    else {
      time += (seconds < 10) ? "0"+seconds : String(seconds);
    }
    return time;
}

function getQuestionJSON(questionNumber){
	$("#pagination a").removeClass("currentQuestion");
	$("#page"+questionNumber+" a").addClass("currentQuestion");
	$("#answers form").attr("action", "/user_test/" + questionNumber);
	$.getJSON(window.location.href + $("#page"+questionNumber+" a").attr("href"), 
			  function(data){
		      	$(".choices").html("");
			  	$("#questionText span").text(data.question.question_text);
			    $(".questionSource").text(data.question.source);
				$(".topicName").text(data.question.topic.name);
				$(".questionNumber").text(questionNumber);
							  
				$.each(data.question.answers, function(index,item){
					var value = item.correct? "correct" : "wrong";
			  		htmlString = "<li><input type='radio' id='choice"+(index+1)+"' name='answer' value='" + value + "' /><a><label for='choice"+(index+1)+"'>"+item.answer_text+"</label></a></li>";
					$(".choices").append(htmlString);
				}); // each
	}); // getJSON
}

function dbTimeRemaining() {
	var time = $("#timer .timer").text();
	var hours = parseInt(time.match(/\d:/)[0].replace(":", ""));
	var minutes = parseInt(time.match(/:\d+:/)[0].replace(":", "").replace(":", ""));
	var seconds = parseInt(time.match(/\d+$/)[0]);
	var time_remaining = (hours * 3600) + (minutes * 60) + (seconds);
	$.get(window.location.href + "?time_remaining=" + time_remaining);
}

// db the time remaining every 5 minutes and on the unload event 
setInterval(dbTimeRemaining, 300000);
window.onbeforeunload = dbTimeRemaining;

// Set the Modal handlers
$(function() {
	$("#beginTest").modal();
	$("#endTestlet").on("hide", function() {
		$("#pagination"+testlet).hide();
		$("#pagination"+(testlet+1)).show();
		testlet++;
				
		var questionNumber = (testlet-1) * <%= @testlet1.length %> + 1
		getQuestionJSON(questionNumber);
		
	}); // on
	
	// Set the countdown timer
	$("#beginTest").on("hide", function() {
		var sec = <%= @user_test.time_remaining %>;
		var timer = setInterval(function() {
			$("#timer .timer").text(seconds2time(--sec));
			if(sec == 0) {
				clearInterval(timer);
			}
		}, 1000); // setInterval
	}); // on
}); // load

// AJAX Change Question on Pagination Click
$(function() {
	$(".page a").click(function() {
		if($(this).hasClass('answered') == false) {
	var questionNumber = $(this).attr("href").replace(/.*=/, "");
	getQuestionJSON(questionNumber);
		} // if
	}); // click
}); // load

// AJAX Handle Submit
$(function() {
	$("#answers .submit").click(function() {
		if($('input:radio[name=answer]:checked').length > 0) {
		var questionNumber = parseInt($(".questionNumber").text());
		
		// See if the answer was correct, add points accordingly
		if ($("#page"+questionNumber+" a").hasClass('answered') == false) {
			var answer = $('input:radio[name=answer]:checked').val();
			answer == "correct" ? correctAnswers++ : wrongAnswers++;
			$(".correctAnswers").text(correctAnswers); $(".wrongAnswers").text(wrongAnswers);		
		} // if
				
			// Go to the next unanswered question
			if ($(".answered").length + 1 < <%= @testlet1.length %>) {
				var nextQuestion;
				var curInterval = 1 + ((testlet - 1) * <%= @user_test.section.questions_per_testlet %>);
				
					for (i=0; i<<%= @user_test.section.questions_per_testlet %>; i++) {
						if (questionNumber+1+i <= testlet * <%= @user_test.section.questions_per_testlet %>) {
							if($("#page"+(questionNumber+1+i)+" a").hasClass("answered")) {
								continue;
							} else {
								nextQuestion = (questionNumber+1+i);
								break;
							} // if the question is unanswered
						} // if the question < 30
						else {
							if($("#page"+curInterval+" a").hasClass("answered")) {
								curInterval++;
								continue;
							} else {
								nextQuestion = (curInterval);
								break;
							}
						} // else

					} // for 
			
			getQuestionJSON(nextQuestion);
			
			// Gray the current question
			$("#page"+questionNumber+" a").addClass("answered");
			
			} // if it's not the last question
			
			else {
				$("#page"+questionNumber+" a").addClass("answered");
				$(".correctAnswersModal span").text($(".correctAnswers").text());
				$(".wrongAnswersModal span").text($(".wrongAnswers").text());
				$(".answered").removeClass("answered");
				
				if (testlet < 3) {
				$("#endTestlet .testletNumber").text(testlet);
				$("#endTestlet .testletNumberPlusOne").text(testlet+1);
				$("#endTestlet").modal();
				} else {
					window.location = "/user_test/finish";
				} // if the test is over
				
			} // if it is the last question
			
		} // if an answer is selected
		
	}); // click
	
}); // load

</script>
<div class="modal hide" id="beginTest">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">×</button>
    <h3>CPA Revolution - <%= @user_test.section.code %> Practice Exam</h3>
  </div>
  <div class="modal-body">
    <p>Welcome to CPA Revolution</p>
	<p>This test is a simulation of a full length CPA Exam. This section has 3 testlets of <%= @testlet1.length %> questions each</p>
	<p>Some of these questions have been generated by an innovative system I created to dynamically generate CPA Exam practice questions, and I would love to hear feedback on whether or not they are providing value to you</p>
	<p>The test will begin when you click the button below.</p>
	<p>You will have <%= @user_test.section.time_per_test / 3600 %> hours total to complete the exam</p>
	<p>CPA Revolution is still in its Alpha testing phase, so I would really appreciate if you could report any bugs through our bug report at the top of the page. This will ensure that CPA Revolution will ultimately become a great resource for all accounting students for years to come</p>
  </div>
  <div class="modal-footer">
    <a class="btn btn-primary" data-dismiss='modal'>Begin Test</a>
  </div>
</div>

<div class="modal hide" id="endTestlet">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">×</button>
    <h3>CPA Revolution - End of Testlet <span class="testletNumber"></span></h3>
  </div>
  <div class="modal-body">
	<p class="correctAnswersModal">Correct Answers: <span></span></p>
	<p class="wrongAnswersModal">Wrong Answers: <span></span></p>
	<p>Your incorrect answers have been logged, and you will be able to view them after the test</p>
  </div>
  <div class="modal-footer">
    <a class="btn btn-primary" data-dismiss='modal'>Continue to Testlet <span class="testletNumberPlusOne"></a>
  </div>
</div>

<div id="contentArea">
	
	<section id="questionContent">
		
		<div id="questionBox">
			<div id="questionText">
				<p><span><%= @user_test.questions[0].question_text %></span></p>
				<hr />
			</div> <!-- questionText -->
			<div id="answers">
				<%= form_tag('/user_test/1', :remote => true) do %>
				<%= hidden_field_tag 'question_number' %>
				<ol class="choices">
				<% @user_test.questions[0].answers.each_with_index do |choice, index| %>
				<li><input type="radio" name="answer" id="choice<%= index+1 %>" value=<%= choice.correct? ? "correct" : "wrong" %> /><a><label for="choice<%= index+1 %>"><%= choice.answer_text %></label></a></li>
				<% end %>
				</ol>
				<hr />
				<%= submit_tag 'Submit', :class => 'submit' %>
				<% end %>
			</div> <!-- choices -->		
		</div> <!-- questionBox -->
		
		<div id="rightSidebar">
			
			<div id="questionInfo">
				<h1>Question <span class='questionNumber'>1</span></h1>
				<h4><span class="questionSource"><%= @user_test.questions[0].source %></span></h4>
				<br /><br /><br />
				<h4><span class='topicName'><%= @user_test.questions[0].topic.name %></span></h4>
				<!-- <h4><span class='subTopicName'>None</span></h4> -->
			</div> <!-- questionInfo -->
			
			<br /><br /><br />
			
			<table id="runningScore">
				<tr><th>Correct</th><th>Incorrect</th></tr>
				<tr><td><span class="correctAnswers"><%= @correct_answers %></span></td><td><span class="wrongAnswers"><%= @wrong_answers %></span></td></tr>
			</table><!-- runningScore -->
			
			<br /><br /><br /><br />
			
			<div id="timer">	
				<h2><span class="timer"><%= @user_test.time_remaining == 14400 ? "4:00:00" : "3:00:00" %></span></h2>
			</div> <!-- timer -->
		</div>	<!-- rightSidebar -->
			
	</section> <!-- questionContent -->
	
	<section id="pagination" class="clearfix">
	<div id="pagination1" class="pagination">
		<ul>
		<% @testlet1.each_with_index do |page, index| %>
		<li><span <%= "id='page#{index+1}'" %> class="page"><a class="<%= "single_digit " if index < 9 %><%= "currentQuestion" if index == 0 %>" href=<%= "?question=#{index + 1}" %> data-remote="true"><%= index+1 %></a></span></li>
		<% end %>	
		</ul>
	</div>
	<div id="pagination2" class="pagination">
		<ul>
		<% @testlet2.each_with_index do |page, index| %>
		<% i = @user_test.section.questions_per_testlet + index + 1 %>
		<li><span <%= "id='page#{i}'" %> class="page"><a href=<%= "?question=#{i}" %> data-remote="true"><%= i %></a></span></li>
		<% end %>	
		</ul>
	</div>
	<div id="pagination3" class="pagination">
		<ul>
		<% @testlet3.each_with_index do |page, index| %>
		<% i = (@user_test.section.questions_per_testlet * 2) + index + 1 %>
		<li><span <%= "id='page#{i}'" %> class="page"><a href=<%= "?question=#{i}" %> data-remote="true"><%= i %></a></span></li>
		<% end %>	
		</ul>
	</div>
	</section> <!-- pagination -->			
	
</div>	